# ==============================================
# Backend Environment Configuration
# ==============================================
# Copy this file to .env and update the values

# Database Configuration
# For local development with PostgreSQL
DATABASE_URL="postgresql://postgres:password@localhost:5432/urlshortener?schema=public"

# JWT Secret for token signing (CHANGE THIS IN PRODUCTION!)
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production-at-least-32-characters"

# Session Secret for OAuth sessions (CHANGE THIS IN PRODUCTION!)
SESSION_SECRET="your-super-secret-session-key-change-this-in-production-at-least-32-characters"

# Google OAuth Configuration
# Get these from https://console.developers.google.com/
# Follow GOOGLE_OAUTH_SETUP.md for detailed instructions
GOOGLE_CLIENT_ID="your_google_client_id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your_google_client_secret"

# Server Configuration
PORT=4000
NODE_ENV=development

# Frontend URL for CORS and OAuth redirects
FRONTEND_URL=http://localhost:3000

# Initial Admin User Configuration
# This email will be created as SUPER_ADMIN on first run
# Must have access to Google account for OAuth login
ADMIN_EMAIL=admin@example.com

# ==============================================
# PRODUCTION NOTES:
# 1. Use managed database service (AWS RDS, etc.)
# 2. Generate secure secrets (32+ random characters)  
# 3. Set NODE_ENV=production
# 4. Configure proper CORS origins
# 5. Use HTTPS URLs in production
# ==============================================